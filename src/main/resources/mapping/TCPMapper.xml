<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.TCPMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.TCP" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="src_port" property="srcPort" jdbcType="INTEGER" />
    <result column="dst_port" property="dstPort" jdbcType="INTEGER" />
    <result column="urg" property="urg" jdbcType="BIT" />
    <result column="ack" property="ack" jdbcType="BIT" />
    <result column="psh" property="psh" jdbcType="BIT" />
    <result column="rst" property="rst" jdbcType="BIT" />
    <result column="syn" property="syn" jdbcType="BIT" />
    <result column="fin" property="fin" jdbcType="BIT" />
    <result column="window" property="window" jdbcType="INTEGER" />
    <result column="urgent_pointer" property="urgentPointer" jdbcType="INTEGER" />
    <result column="option" property="option" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.entity.TCPWithBLOBs" extends="BaseResultMap" >
    <result column="sequence" property="sequence" jdbcType="LONGVARCHAR" />
    <result column="ack_num" property="ackNum" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, src_port, dst_port, urg, ack, psh, rst, syn, fin, window, urgent_pointer, option
  </sql>
  <sql id="Blob_Column_List" >
    sequence, ack_num
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.entity.TCPExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tcp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.TCPExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tcp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tcp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tcp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.TCPExample" >
    delete from tcp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.TCPWithBLOBs" >
    insert into tcp (id, src_port, dst_port, 
      urg, ack, psh, rst, 
      syn, fin, window, urgent_pointer, 
      option, sequence, ack_num
      )
    values (#{id,jdbcType=INTEGER}, #{srcPort,jdbcType=INTEGER}, #{dstPort,jdbcType=INTEGER}, 
      #{urg,jdbcType=BIT}, #{ack,jdbcType=BIT}, #{psh,jdbcType=BIT}, #{rst,jdbcType=BIT}, 
      #{syn,jdbcType=BIT}, #{fin,jdbcType=BIT}, #{window,jdbcType=INTEGER}, #{urgentPointer,jdbcType=INTEGER}, 
      #{option,jdbcType=VARCHAR}, #{sequence,jdbcType=LONGVARCHAR}, #{ackNum,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.TCPWithBLOBs" >
    insert into tcp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="srcPort != null" >
        src_port,
      </if>
      <if test="dstPort != null" >
        dst_port,
      </if>
      <if test="urg != null" >
        urg,
      </if>
      <if test="ack != null" >
        ack,
      </if>
      <if test="psh != null" >
        psh,
      </if>
      <if test="rst != null" >
        rst,
      </if>
      <if test="syn != null" >
        syn,
      </if>
      <if test="fin != null" >
        fin,
      </if>
      <if test="window != null" >
        window,
      </if>
      <if test="urgentPointer != null" >
        urgent_pointer,
      </if>
      <if test="option != null" >
        option,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="ackNum != null" >
        ack_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="srcPort != null" >
        #{srcPort,jdbcType=INTEGER},
      </if>
      <if test="dstPort != null" >
        #{dstPort,jdbcType=INTEGER},
      </if>
      <if test="urg != null" >
        #{urg,jdbcType=BIT},
      </if>
      <if test="ack != null" >
        #{ack,jdbcType=BIT},
      </if>
      <if test="psh != null" >
        #{psh,jdbcType=BIT},
      </if>
      <if test="rst != null" >
        #{rst,jdbcType=BIT},
      </if>
      <if test="syn != null" >
        #{syn,jdbcType=BIT},
      </if>
      <if test="fin != null" >
        #{fin,jdbcType=BIT},
      </if>
      <if test="window != null" >
        #{window,jdbcType=INTEGER},
      </if>
      <if test="urgentPointer != null" >
        #{urgentPointer,jdbcType=INTEGER},
      </if>
      <if test="option != null" >
        #{option,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=LONGVARCHAR},
      </if>
      <if test="ackNum != null" >
        #{ackNum,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.TCPExample" resultType="java.lang.Integer" >
    select count(*) from tcp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tcp
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.srcPort != null" >
        src_port = #{record.srcPort,jdbcType=INTEGER},
      </if>
      <if test="record.dstPort != null" >
        dst_port = #{record.dstPort,jdbcType=INTEGER},
      </if>
      <if test="record.urg != null" >
        urg = #{record.urg,jdbcType=BIT},
      </if>
      <if test="record.ack != null" >
        ack = #{record.ack,jdbcType=BIT},
      </if>
      <if test="record.psh != null" >
        psh = #{record.psh,jdbcType=BIT},
      </if>
      <if test="record.rst != null" >
        rst = #{record.rst,jdbcType=BIT},
      </if>
      <if test="record.syn != null" >
        syn = #{record.syn,jdbcType=BIT},
      </if>
      <if test="record.fin != null" >
        fin = #{record.fin,jdbcType=BIT},
      </if>
      <if test="record.window != null" >
        window = #{record.window,jdbcType=INTEGER},
      </if>
      <if test="record.urgentPointer != null" >
        urgent_pointer = #{record.urgentPointer,jdbcType=INTEGER},
      </if>
      <if test="record.option != null" >
        option = #{record.option,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ackNum != null" >
        ack_num = #{record.ackNum,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tcp
    set id = #{record.id,jdbcType=INTEGER},
      src_port = #{record.srcPort,jdbcType=INTEGER},
      dst_port = #{record.dstPort,jdbcType=INTEGER},
      urg = #{record.urg,jdbcType=BIT},
      ack = #{record.ack,jdbcType=BIT},
      psh = #{record.psh,jdbcType=BIT},
      rst = #{record.rst,jdbcType=BIT},
      syn = #{record.syn,jdbcType=BIT},
      fin = #{record.fin,jdbcType=BIT},
      window = #{record.window,jdbcType=INTEGER},
      urgent_pointer = #{record.urgentPointer,jdbcType=INTEGER},
      option = #{record.option,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=LONGVARCHAR},
      ack_num = #{record.ackNum,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tcp
    set id = #{record.id,jdbcType=INTEGER},
      src_port = #{record.srcPort,jdbcType=INTEGER},
      dst_port = #{record.dstPort,jdbcType=INTEGER},
      urg = #{record.urg,jdbcType=BIT},
      ack = #{record.ack,jdbcType=BIT},
      psh = #{record.psh,jdbcType=BIT},
      rst = #{record.rst,jdbcType=BIT},
      syn = #{record.syn,jdbcType=BIT},
      fin = #{record.fin,jdbcType=BIT},
      window = #{record.window,jdbcType=INTEGER},
      urgent_pointer = #{record.urgentPointer,jdbcType=INTEGER},
      option = #{record.option,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.TCPWithBLOBs" >
    update tcp
    <set >
      <if test="srcPort != null" >
        src_port = #{srcPort,jdbcType=INTEGER},
      </if>
      <if test="dstPort != null" >
        dst_port = #{dstPort,jdbcType=INTEGER},
      </if>
      <if test="urg != null" >
        urg = #{urg,jdbcType=BIT},
      </if>
      <if test="ack != null" >
        ack = #{ack,jdbcType=BIT},
      </if>
      <if test="psh != null" >
        psh = #{psh,jdbcType=BIT},
      </if>
      <if test="rst != null" >
        rst = #{rst,jdbcType=BIT},
      </if>
      <if test="syn != null" >
        syn = #{syn,jdbcType=BIT},
      </if>
      <if test="fin != null" >
        fin = #{fin,jdbcType=BIT},
      </if>
      <if test="window != null" >
        window = #{window,jdbcType=INTEGER},
      </if>
      <if test="urgentPointer != null" >
        urgent_pointer = #{urgentPointer,jdbcType=INTEGER},
      </if>
      <if test="option != null" >
        option = #{option,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=LONGVARCHAR},
      </if>
      <if test="ackNum != null" >
        ack_num = #{ackNum,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.entity.TCPWithBLOBs" >
    update tcp
    set src_port = #{srcPort,jdbcType=INTEGER},
      dst_port = #{dstPort,jdbcType=INTEGER},
      urg = #{urg,jdbcType=BIT},
      ack = #{ack,jdbcType=BIT},
      psh = #{psh,jdbcType=BIT},
      rst = #{rst,jdbcType=BIT},
      syn = #{syn,jdbcType=BIT},
      fin = #{fin,jdbcType=BIT},
      window = #{window,jdbcType=INTEGER},
      urgent_pointer = #{urgentPointer,jdbcType=INTEGER},
      option = #{option,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=LONGVARCHAR},
      ack_num = #{ackNum,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.TCP" >
    update tcp
    set src_port = #{srcPort,jdbcType=INTEGER},
      dst_port = #{dstPort,jdbcType=INTEGER},
      urg = #{urg,jdbcType=BIT},
      ack = #{ack,jdbcType=BIT},
      psh = #{psh,jdbcType=BIT},
      rst = #{rst,jdbcType=BIT},
      syn = #{syn,jdbcType=BIT},
      fin = #{fin,jdbcType=BIT},
      window = #{window,jdbcType=INTEGER},
      urgent_pointer = #{urgentPointer,jdbcType=INTEGER},
      option = #{option,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>